---

# Deployment

kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ service.name }}
  namespace: zgw
  labels:
    k8s-app: {{ service.name }}
spec:
  replicas: 1
  strategy:
    type: Recreate  # required to be able to (re) mount the RWO PV
  selector:
    matchLabels:
      k8s-app: {{ service.name }}
  template:
    metadata:
      name: {{ service.name }}
      labels:
        k8s-app: {{ service.name }}
    spec:
      volumes:
        - name: private-storage
          persistentVolumeClaim:
            claimName: {{ service.name }}-private-media
      containers:
      - name: {{ service.name }}
        image: vngr/gemma-drc:{{ service.image_tag }}
        imagePullPolicy: Always
        resources:
          requests:
            memory: "120Mi"
            cpu: "5m"
          limits:
            memory: "350Mi"
            cpu: "250m"
        readinessProbe:
          httpGet:
            path: /
            port: 8000
            httpHeaders:
              - name: Host
                value: localhost
          initialDelaySeconds: 15
          periodSeconds: 30
        livenessProbe:
          httpGet:
            path: /
            port: 8000
            httpHeaders:
              - name: Host
                value: localhost
          initialDelaySeconds: 15
          periodSeconds: 30
        volumeMounts:
          - name: private-storage
            mountPath: /app/private-media
            subPath: zgw/{{ service.name }}/private-media
        env:
          - name: DJANGO_SETTINGS_MODULE
            value: drc.conf.docker
          - name: ALLOWED_HOSTS
            value: "{{ service.domain }},localhost"
          - name: DB_HOST
            value: {{ db_host }}
          - name: DB_NAME
            value: {{ service.name }}
            # see nginx.yml, this is required until a better storage solution
            # is available
          - name: SENDFILE_BACKEND
            value: sendfile.backends.simple
          - name: SECRET_KEY
            valueFrom:
              secretKeyRef:
                name: {{ service.name }}-secrets
                key: SECRET_KEY
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ service.name }}-secrets
                key: DB_PASSWORD
          - name: SENTRY_DSN
            valueFrom:
              secretKeyRef:
                name: {{ service.name }}-secrets
                key: SENTRY_DSN
          - name: MIN_UPLOAD_SIZE
            value: "{{ service.min_upload_size }}"
          - name: SELF_BRANCH
            value: {% if service.name == 'drc-test' %} master {% else %} '' {% endif %}

---

# Service

kind: Service
apiVersion: v1
metadata:
  name: {{ service.name }}
  namespace: zgw
  labels:
    k8s-app: {{ service.name }}
spec:
  selector:
    k8s-app: {{ service.name }}
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000
